--Assignment 2
--Task 1: Building a Pipeline with Streams and Tasks
--Objective: Create a pipeline to transform patient admission data.


CREATE OR REPLACE TABLE HealthcareDB.Patients.PatientRecords_2 (
    PatientID INT IDENTITY(1, 1),            -- Unique patient identifier
    Name STRING,                           -- Patient name
    Diagnosis STRING,                      -- Diagnosis description
    AdmissionDate DATE,                    -- Admission date
    DischargeDate DATE,                    -- Discharge date
    Region STRING,                         -- Region or hospital location
    Age INT,                               -- Patient's age
    TotalBill FLOAT,                       -- Total bill amount
    InsuranceProvider STRING               -- Insurance provider
);

INSERT INTO HealthcareDB.Patients.PatientRecords_2 
(Name, Diagnosis, AdmissionDate, DischargeDate, Region, Age, TotalBill, InsuranceProvider) 
VALUES
('Alice Smith', 'Hypertension', '2024-01-10', '2024-01-15', 'North', 45, 1200.50, 'Provider A'),
('Bob Johnson', 'Diabetes', '2024-02-01', '2024-02-10', 'South', 50, 1500.75, 'Provider B'),
('Charlie Brown', 'Asthma', '2024-03-05', NULL, 'East', 29, NULL, 'Provider A'),
('Diana Prince', 'Pneumonia', '2024-04-20', '2024-04-30', 'West', 38, 2000.00, 'Provider C'),
('Eve White', 'Migraine', '2024-05-10', '2024-05-12', 'North', 32, 800.00, 'Provider B');

SELECT * FROM HealthcareDB.Patients.PATIENTRECORDS_2;

create or replace stream PATIENTRECORDS_2_Stream on table PATIENTRECORDS_2;


INSERT INTO PATIENTRECORDS_2 
(Name, Diagnosis, AdmissionDate, DischargeDate, Region, Age, TotalBill, InsuranceProvider) 
VALUES
('Brian Lawrence', 'Fever', '2024-06-11', '2024-06-19', 'East', 42, 2800.00, 'Provider C'),
('Nancy Olivia', 'Cold', '2024-05-20', '2024-05-23', 'West', 39, 3100.00, 'Provider D');

select * from PATIENTRECORDS_2 ;

create or replace table PATIENTRECORDS_DIAG_COUNT (Diagnosis varchar, PatientCount int);


create or replace task TASK_PATIENTRECORDS_2 
warehouse = 'COMPUTE_WH' 
schedule = '1 minute' 
when SYSTEM$STREAM_HAS_DATA('PATIENTRECORDS_2_Stream') 
AS 
insert into PATIENTRECORDS_DIAG_COUNT 
select Diagnosis, count(*) as PatientCount 
from PATIENTRECORDS_2_Stream 
group by Diagnosis;


alter task TASK_PATIENTRECORDS_2 resume;

----- suspend after few minutes-------
alter task TASK_PATIENTRECORDS_2 suspend;


select * from PATIENTRECORDS_2_Stream; --this should be empty

select * from PATIENTRECORDS_DIAG_COUNT; -- this should have 2 records


---------------------------------------------------------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------------------------------------------------------


--Task 2: Query Optimization with Clustering Keys
--Objective: Optimize a table by adding clustering keys.

SELECT * FROM PATIENTRECORDS_2;

SELECT Diagnosis, count(*) 
FROM PATIENTRECORDS_2 
WHERE ADMISSIONDATE > '2024-01-01'
GROUP BY DIAGNOSIS;
-- Query duration -- 97ms

ALTER TABLE PATIENTRECORDS_2 
CLUSTER BY (ADMISSIONDATE); -- adding key - ADMISSIONDATE

SELECT Diagnosis, count(*) 
FROM PATIENTRECORDS_2 
WHERE ADMISSIONDATE > '2024-01-01'
GROUP BY Diagnosis;
-- Query duration -- 71ms

